// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PIII_TrabajoFinal_BilleteraVirtual.Data;

#nullable disable

namespace PIII_TrabajoFinal_BilleteraVirtual.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250616165418_newDB")]
    partial class newDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PIII_TrabajoFinal_BilleteraVirtual.Modelos.Cartera", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("monedaid")
                        .HasColumnType("int");

                    b.Property<decimal>("resumensaldo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("usuarioid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("monedaid");

                    b.HasIndex("usuarioid");

                    b.ToTable("Cartera");
                });

            modelBuilder.Entity("PIII_TrabajoFinal_BilleteraVirtual.Modelos.Moneda", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<decimal>("cambiodolar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("simbolo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Moneda");
                });

            modelBuilder.Entity("PIII_TrabajoFinal_BilleteraVirtual.Modelos.Transaccion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("carteraid")
                        .HasColumnType("int");

                    b.Property<int>("cuentareceptor")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("monedaid")
                        .HasColumnType("int");

                    b.Property<decimal>("monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("carteraid");

                    b.HasIndex("monedaid");

                    b.ToTable("Transacciones");
                });

            modelBuilder.Entity("PIII_TrabajoFinal_BilleteraVirtual.Modelos.Usuario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("PIII_TrabajoFinal_BilleteraVirtual.Modelos.Cartera", b =>
                {
                    b.HasOne("PIII_TrabajoFinal_BilleteraVirtual.Modelos.Moneda", "Moneda")
                        .WithMany()
                        .HasForeignKey("monedaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PIII_TrabajoFinal_BilleteraVirtual.Modelos.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("usuarioid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Moneda");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PIII_TrabajoFinal_BilleteraVirtual.Modelos.Transaccion", b =>
                {
                    b.HasOne("PIII_TrabajoFinal_BilleteraVirtual.Modelos.Cartera", "cartera")
                        .WithMany()
                        .HasForeignKey("carteraid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PIII_TrabajoFinal_BilleteraVirtual.Modelos.Moneda", "Moneda")
                        .WithMany()
                        .HasForeignKey("monedaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Moneda");

                    b.Navigation("cartera");
                });
#pragma warning restore 612, 618
        }
    }
}
